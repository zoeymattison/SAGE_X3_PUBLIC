Funprog ZFUNC_ORDPIC(ZNUM)
Value Char ZNUM
Local Char RETVAL(200)
Local Char ZORD
If !clalev([ZPE]) : Local File STOPRED[ZPE] : Endif
Filter [ZPE] Where ORINUM = ZNUM
Read [ZPE] First
ZORD = [ZPE]PRHNUM
RETVAL = ZORD
End RETVAL

Funprog ZFUNC_AUTHTOT(ZNUM)
Value Char ZNUM
Local Decimal ZTOT : ZTOT = 0
If !clalev([ZSE]) : Local File SEAUTH[ZSE] : Endif
Filter [ZSE] Where SOHNUM = ZNUM
For [ZSE]
ZTOT = ZTOT + [ZSE]AUTAMT
Next
RETVAL = num$(ZTOT)
End RETVAL

Funprog ZFUNC_PICKLINES(ZNUM)
Value Char ZNUM
Local Char RETVAL(200)
Local Integer ZCOUNT : ZCOUNT = 0
If !clalev([ZPE]) : Local File STOPRED[ZPE] : Endif
Filter [ZPE] Where PRHNUM = ZNUM
For [ZPE]
ZCOUNT = ZCOUNT + 1
Next
RETVAL = num$(ZCOUNT)
End RETVAL

Funprog ZFUNC_COUNTS(ZITM)
Value Char ZITM
Local Char RETVAL(200)
Local Integer COUNT
Local Char ZFISCALSTART : ZFISCALSTART = '0701'
Local Char ZFISCALYEAR

If !clalev([ZIV]) : Local File ITMMVT[ZIV] : Endif

# Get today's date and determine the first year of the current fiscal
Case month$(date$)
    When "January"    : ZFISCALYEAR = num$(year(date$)-1)
    When "February"   : ZFISCALYEAR = num$(year(date$)-1)
    When "March"      : ZFISCALYEAR = num$(year(date$)-1)
    When "April"      : ZFISCALYEAR = num$(year(date$)-1)
    When "May"        : ZFISCALYEAR = num$(year(date$)-1)
    When "June"       : ZFISCALYEAR = num$(year(date$)-1)
    When "July"       : ZFISCALYEAR = num$(year(date$))
    When "August"     : ZFISCALYEAR = num$(year(date$))
    When "September"  : ZFISCALYEAR = num$(year(date$))
    When "October"    : ZFISCALYEAR = num$(year(date$))
    When "November"   : ZFISCALYEAR = num$(year(date$))
    When "December"   : ZFISCALYEAR = num$(year(date$))
    When Default
Endcase

# Create the fiscal start string by appending the above result to 0701
Append ZFISCALYEAR, ZFISCALSTART

# Calculate how many times the product has been counted since the ZFISCALEAR date, and return the value to the filter
Filter [ZIV] Where ITMREF = ZITM and STOFCY = 'DC30'
    Read [ZIV] First
        If [ZIV]CUNDAT(0) >= ZFISCALYEAR : COUNT += 1 : Endif
        If [ZIV]CUNDAT(1) >= ZFISCALYEAR : COUNT += 1 : Endif
        If [ZIV]CUNDAT(2) >= ZFISCALYEAR : COUNT += 1 : Endif
        If [ZIV]CUNDAT(3) >= ZFISCALYEAR : COUNT += 1 : Endif
        RETVAL = num$(COUNT)
        End RETVAL
Raz ZITM, COUNT

Funprog ZFUNC_BPTOTAL
Local Decimal RETVAL
If !clalev([ZSV]) : Local File SINVOICEV[ZSV] : Endif
If !clalev([ZSI]) : Local File SINVOICE[ZSI] : Endif
Local Decimal ZL_AMTATI
Link [ZSV] With [ZSI]SIH0=[F:ZSV]NUM As [ZSH] Where ([F:ZSV]BPCORD = [M:BPC0]BPCNUM or [F:ZSV]BPCINV = [M:BPC0]BPCNUM)
For [ZSH]
[L]ZL_AMTATI += [F:ZSI]AMTATI*[F:ZSI]SNS
Next
Infbox num$([L]ZL_AMTATI)
Raz [L]ZL_AMTATI

Funprog ZFUNC_SDHLIST
# 1. Filter the delivery table for any unvalidated OR uninvoiced invocies.
# -> CFMFLG = 1 OR (CFMFLG = 2 & BETFCY = 1 & INVFLG = 1)
# 2. Loop through the tables and create a list of items in a global array
# -> Creation date time, Sales Site, Sold-to, Sold-to name, Delivery number, Sales order, validation status, invoice status
# -> format$([F:ZSDH]CREDATTIM), [F:ZSDH]SALFCY, [F:ZSDH]BPCORD, [F:ZBPC]BPCNAM, [F:ZSDH]SDHNUM, [F:ZSDH]SOHNUM, If YN [F:ZSDH]CFMFLG, If YN [F:ZSDH]INVFLG
# 3. Call a workflow to print the global array

If !clalev([ZSDH]) : Local File SDELIVERY [ZSDH] : Endif
If !clalev([ZBPC]) : Local File BPCUSTOMER [ZBPC] : Endif

Local Integer ZL_CURTIM : [L]ZL_CURTIM = val(format$("hhmm",func TIMEZONE_CSTD.TO_LOCAL("Pacific Standard Time",gdatetime$(datetime$))))-100 # 1 hour ago
Local Char ZL_CFMFLG(50)
Local Char ZL_INVFLG(50)
Local Char ZL_SOHNUM(50)
Local Clbfile RETVAL (6)
Global Shortint ZV_SDHLIST : [V]ZV_SDHLIST = 0

Columns [ZSDH] (CREDATTIM, CREDAT, SALFCY, BPCORD, SDHNUM, SOHNUM, CFMFLG, INVFLG, BETFCY)
Columns [ZBPC] (BPCNUM, BPCNAM)
Filter [ZSDH] Where CREDAT >= gdat$(1,1,25) and  (CFMFLG = 1 or (CFMFLG = 2 & BETFCY = 1 & INVFLG = 1))

For [ZSDH]
[V]ZV_SDHLIST += 1
Raz [L]ZL_INVFLG, [L]ZL_CFMFLG, [L]ZL_SOHNUM
Case num$([F:ZSDH]CFMFLG)
    When "1" : [L]ZL_CFMFLG = "NOT VALIDATED"
    When "2" : [L]ZL_CFMFLG = "VALIDATED"
Endcase
If [F:ZSDH]BETFCY = 2
    [L]ZL_INVFLG = "INVOICE NOT REQ. (INTERSITE)"
Else
    Case num$([F:ZSDH]INVFLG)
        When "1" : [L]ZL_INVFLG = "NOT INVOICED"
        When "2" : [L]ZL_INVFLG = "INVOICED"
    Endcase
Endif

If [F:ZSDH]SOHNUM = ""
    [L]ZL_SOHNUM = "NO SALES ORDER"
Else
    [L]ZL_SOHNUM = [F:ZSDH]SOHNUM
Endif

Read [ZBPC]BPC0=[F:ZSDH]BPCORD

If val(format$("D:YYYYMMDDhhmm",datetime$))-val(format$("D:YYYYMMDDhhmm",[F:ZSDH]CREDATTIM))>=100
    RETVAL += format$("D:MM[/]DD[/]YYYY[ ]hh[:]mm",
&   func TIMEZONE_CSTD.TO_LOCAL("Pacific Standard Time",
&   gdatetime$([F:ZSDH]CREDATTIM)))
&   +" - "+[F:ZSDH]SALFCY
&   +" - "+[F:ZSDH]BPCORD
&   +" - "+[F:ZBPC]BPCNAM
&   +" - "+[F:ZSDH]SDHNUM
&   +" - "+[L]ZL_SOHNUM
&   +" - "+[L]ZL_CFMFLG
&   +" - "+[L]ZL_INVFLG+chr$(10)+chr$(13)
Endif
Next

Raz [V]ZV_SDHLIST
Kill [V]ZV_SDHLIST

End RETVAL
